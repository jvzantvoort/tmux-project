#!/bin/bash

[[ "$-" =~ i ]] || return
[[ -z "$TMUX" ]] && return

#shellcheck disable=SC2155
declare -x SESSIONNAME=$(tmux display-message -p '#S'  2>/dev/null)

#shellcheck disable=SC1090
if [ -f "$HOME/.bash/tmux.d/${SESSIONNAME}.env" ]
then
  source  "$HOME/.bash/tmux.d/${SESSIONNAME}.env"
fi

function __tmuxp_ls()
{
  tmux ls -F '#{session_name}' 2>/dev/null
}

function __tmuxp_in()
{
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}

function __tmuxp_attach()
{
  local session
  local configfile

  session=$1;
  configfile="${HOME}/.bash/tmux.d/${session}.rc"

  [[ -f "${configfile}" ]] || configfile="${HOME}/.bash/tmux.d/default.rc"

  TERM="screen-256color" tmux -f "${configfile}" attach -d -t "${session}"
}

function __tmuxp_new()
{
  local session
  local configfile

  session=$1;
  configfile="${HOME}/.bash/tmux.d/${session}.rc"

  [[ -f "${configfile}" ]] || configfile="${HOME}/.bash/tmux.d/default.rc"

  TERM="screen-256color" tmux -f "${configfile}" new -s "${session}"
}

function resume()
{
  local session
  case $1 in
    ls|list_sessions) tmux-project list -f;;
    *) session=$1;
      [[ -z "${session}" ]] && return 1
      #shellcheck disable=SC2046
      if __tmuxp_in "${session}" $(__tmuxp_ls)
      then
        __tmuxp_attach "${session}"
      else
        __tmuxp_new "${session}"
      fi
      ;;
  esac
}
